name: Deploy to Vercel

on:
  workflow_dispatch:  # Manual trigger only - click button in Actions tab
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  NODE_VERSION: '20'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  # Run all CI checks first
  ci:
    name: CI Checks
    uses: ./.github/workflows/ci.yml

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: ci
    if: github.event.inputs.environment == 'preview'
    environment:
      name: Preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Preview
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$url" >> $GITHUB_OUTPUT
          echo "Preview URL: $url"

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: ci
    if: github.event.inputs.environment == 'production'
    environment:
      name: Production
      url: https://claret.tech
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        env:
          # Production environment variables
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
          USE_GITHUB_DATA: true
          MEDIUM_USERNAME: ${{ secrets.MEDIUM_USERNAME }}
          NEXT_PUBLIC_SITE_URL: https://claret.tech
          NEXT_PUBLIC_ENABLE_TERMINAL: true
          NEXT_PUBLIC_DEFAULT_LLM_MODEL: llama-3.2-1b
          NEXT_PUBLIC_ENABLE_AI_FEATURES: true
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}